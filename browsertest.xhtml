<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>parse framework browser tool</title>
        <meta content="application/xhtml+xml;charset=UTF-8" http-equiv="Content-Type"/>
        <meta content="blendTrans(Duration=0)" http-equiv="Page-Enter"/>
        <meta content="blendTrans(Duration=0)" http-equiv="Page-Exit"/>
        <meta content="text/css" http-equiv="content-style-type"/>
        <meta content="application/javascript" http-equiv="content-script-type"/>
        <style type="text/css">
            body{font-family:monospace;margin:1em;text-size:10px}
            h1{margin-top:0}
            .input label{display:block}
            .input textarea{background:#eee;display:block;height:20em;width:100%;}
            tr.odd{background:#eeeeec}
            tbody tr.odd:hover,
            tbody tr.even:hover{background:#def}
            th,
            td{border:0.1em solid #cca;min-width:3em;padding:0.2em 0.4em}
            thead th,
            .header th{background:#ddc;text-align:left}
            #tabledata {border-collapse:collapse;box-shadow:0.1em 0.1em 0.5em #999}
            tbody .numb{text-align:right}
            #parsetime span{display:block}
            li span{color:#070;font-weight:bold}
        </style>
    </head>
    <body>
        <h1>parse-framework experimentation</h1>
        <ul>
            <li id="timeparse">Parser time : <span></span></li>
            <li id="timetotal">Browser time: <span></span></li>
        </ul>
        <div class="input">
            <label for="input">Input</label>
            <textarea id="input"></textarea>
        </div>
        <div class="output">
            <h2>Output</h2>
            <div id="data"></div>
        </div>
        <script type="application/javascript" src="parse.js"></script>
        <script type="application/javascript">
            <![CDATA[
            (function () {
                "use strict";
                var input   = document.getElementById("input"),
                    builder = function (data) {
                        var a     = 0,
                            len   = data.attrs.length,
                            table = document.createElement("table"),
                            body  = document.createElement("thead"),
                            cell  = function (text, type, row, className) {
                                var el = document.createElement(type);
                                if (className !== "") {
                                    el.setAttribute("class", className);
                                }
                                el.innerHTML = text;
                                row.appendChild(el);
                            },
                            row   = function () {
                                var tr = document.createElement("tr");
                                cell(a, "th", tr, "numb");
                                cell(JSON.stringify(data.attrs[a]), "td", tr, "");
                                cell(data.begin[a], "td", tr, "numb");
                                cell(data.jscom[a], "td", tr, "");
                                cell(data.lines[a], "td", tr, "numb");
                                cell(data.presv[a], "td", tr, "");
                                cell(data.stack[a], "td", tr, "");
                                cell(data.token[a].replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;"), "td", tr, "");
                                cell(data.types[a], "td", tr, "");
                                if (a % 2 === 0) {
                                    tr.setAttribute("class", "even");
                                } else {
                                    tr.setAttribute("class", "odd");
                                }
                                body.appendChild(tr);
                            },
                            header = function (parent) {
                                var tr   = document.createElement("tr");
                                cell("index", "th", tr, "numb");
                                cell("attrs", "th", tr, "");
                                cell("begin", "th", tr, "numb");
                                cell("jscom", "th", tr, "");
                                cell("lines", "th", tr, "numb");
                                cell("presv", "th", tr, "");
                                cell("stack", "th", tr, "");
                                cell("token", "th", tr, "");
                                cell("types", "th", tr, "");
                                tr.setAttribute("class", "header");
                                parent.appendChild(tr);
                            };
                        table.setAttribute("id", "tabledata");
                        header(body);
                        table.appendChild(body);
                        body = document.createElement("tbody");
                        table.appendChild(body);
                        if (len === 0) {
                            return;
                        }
                        do {
                            if (a % 100 === 0 && a > 0) {
                                header(body);
                            }
                            row();
                            a = a + 1;
                        } while (a < len);
                        document.getElementById("data").innerHTML = "";
                        document.getElementById("data").appendChild(table);
                    },
                    handler = function () {
                        var value = input.value,
                            startTime = 0,
                            startTotal = Math.round(performance.now() * 1000),
                            options = {
                                correct: true,
                                objectSort: true,
                                source: value,
                                type  : "script"
                            },
                            output = {};
                        startTime = Math.round(performance.now() * 1000);
                        output = window.parser(options);
                        (function () {
                            var endTime = Math.round(performance.now() * 1000),
                                time = (endTime - startTime) / 1000000;
                            document.getElementById("timeparse").getElementsByTagName("span")[0].innerHTML = time + " seconds.";
                        }());
                        builder(output);
                        if (typeof localStorage === "object") {
                            localStorage.parseCode = value;
                        }
                        (function () {
                            var endTime = Math.round(performance.now() * 1000),
                                time = (endTime - startTotal) / 1000000;
                            document.getElementById("timetotal").getElementsByTagName("span")[0].innerHTML = time + " seconds.";
                        }());
                    };
                input.onkeyup = handler;
                if (typeof localStorage === "object" && localStorage.parseCode !== undefined) {
                    input.value = localStorage.parseCode;
                }
            }());
            ]]>
        </script>
    </body>
</html>